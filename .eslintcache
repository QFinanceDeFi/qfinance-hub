[{"/Users/dperk6/qfinance/qfinance-client/src/index.js":"1","/Users/dperk6/qfinance/qfinance-client/src/App.js":"2","/Users/dperk6/qfinance/qfinance-client/src/reportWebVitals.js":"3","/Users/dperk6/qfinance/qfinance-client/src/components/Navbar/Navbar.js":"4","/Users/dperk6/qfinance/qfinance-client/src/views/Learn/Learn.js":"5","/Users/dperk6/qfinance/qfinance-client/src/views/Home/Home.js":"6","/Users/dperk6/qfinance/qfinance-client/src/components/Learn/Learn.js":"7","/Users/dperk6/qfinance/qfinance-client/src/components/PoolList/PoolForm.js":"8","/Users/dperk6/qfinance/qfinance-client/src/services/init.js":"9","/Users/dperk6/qfinance/qfinance-client/src/services/getPools.js":"10","/Users/dperk6/qfinance/qfinance-client/src/services/newPool.js":"11","/Users/dperk6/qfinance/qfinance-client/src/services/testTokenList.js":"12","/Users/dperk6/qfinance/qfinance-client/src/services/tokenList.js":"13","/Users/dperk6/qfinance/qfinance-client/src/components/Account/Account.js":"14","/Users/dperk6/qfinance/qfinance-client/src/components/ManagePool/ManagePool.js":"15","/Users/dperk6/qfinance/qfinance-client/src/services/depositEth.js":"16","/Users/dperk6/qfinance/qfinance-client/src/services/withdrawEth.js":"17","/Users/dperk6/qfinance/qfinance-client/src/components/PoolList/PoolList.js":"18","/Users/dperk6/qfinance/qfinance-client/src/views/Pools/Pools.js":"19"},{"size":500,"mtime":1606943186740,"results":"20","hashOfConfig":"21"},{"size":2132,"mtime":1607035488915,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":1606943186741,"results":"23","hashOfConfig":"21"},{"size":1693,"mtime":1607036622287,"results":"24","hashOfConfig":"21"},{"size":3483,"mtime":1606947288916,"results":"25","hashOfConfig":"21"},{"size":1397,"mtime":1606947120030,"results":"26","hashOfConfig":"21"},{"size":15937,"mtime":1606946885014,"results":"27","hashOfConfig":"21"},{"size":4987,"mtime":1607035806806,"results":"28","hashOfConfig":"21"},{"size":716,"mtime":1606961979881,"results":"29","hashOfConfig":"21"},{"size":1997,"mtime":1607034829617,"results":"30","hashOfConfig":"21"},{"size":1739,"mtime":1606962601455,"results":"31","hashOfConfig":"21"},{"size":541,"mtime":1606950208963,"results":"32","hashOfConfig":"21"},{"size":110710,"mtime":1606948683015,"results":"33","hashOfConfig":"21"},{"size":1331,"mtime":1606950805916,"results":"34","hashOfConfig":"21"},{"size":5684,"mtime":1606965274948,"results":"35","hashOfConfig":"21"},{"size":857,"mtime":1606948682743,"results":"36","hashOfConfig":"21"},{"size":814,"mtime":1606948683047,"results":"37","hashOfConfig":"21"},{"size":3570,"mtime":1607035550800,"results":"38","hashOfConfig":"21"},{"size":162,"mtime":1607035136061,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"e0g98o",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/dperk6/qfinance/qfinance-client/src/index.js",[],["80","81"],"/Users/dperk6/qfinance/qfinance-client/src/App.js",[],"/Users/dperk6/qfinance/qfinance-client/src/reportWebVitals.js",[],"/Users/dperk6/qfinance/qfinance-client/src/components/Navbar/Navbar.js",[],"/Users/dperk6/qfinance/qfinance-client/src/views/Learn/Learn.js",[],"/Users/dperk6/qfinance/qfinance-client/src/views/Home/Home.js",[],"/Users/dperk6/qfinance/qfinance-client/src/components/Learn/Learn.js",[],"/Users/dperk6/qfinance/qfinance-client/src/components/PoolList/PoolForm.js",["82","83"],"/Users/dperk6/qfinance/qfinance-client/src/services/init.js",[],"/Users/dperk6/qfinance/qfinance-client/src/services/getPools.js",[],"/Users/dperk6/qfinance/qfinance-client/src/services/newPool.js",[],"/Users/dperk6/qfinance/qfinance-client/src/services/testTokenList.js",[],"/Users/dperk6/qfinance/qfinance-client/src/services/tokenList.js",[],"/Users/dperk6/qfinance/qfinance-client/src/components/Account/Account.js",[],"/Users/dperk6/qfinance/qfinance-client/src/components/ManagePool/ManagePool.js",["84","85","86","87"],"import React, { useState, useEffect } from \"react\"\nimport { DefaultButton, TextField } from \"@fluentui/react\"\nimport { useParams } from \"react-router-dom\"\nimport { getPool } from \"../../services/getPools\"\nimport { withdrawEth } from \"../../services/withdrawEth\";\nimport { depositEth } from \"../../services/depositEth\";\nimport { tokenList } from \"../../services/tokenList\"\nimport { testTokenList } from \"../../services/testTokenList\"\nimport { web3 } from \"../../services/init\";\nimport {\n    PieChart, Pie, Sector, Cell, Tooltip, ResponsiveContainer,\n  } from 'recharts';\n\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\n\nconst ManagePool = () => {\n    const [state, setState] = useState({\n        address: '',\n        creator: '',\n        currentValue: 0\n    })\n    const [breakdown, setBreakdown] = useState([]);\n    const [deposit, setDeposit] = useState()\n    const [withdraw, setWithdraw] = useState()\n    const [connected, setConnected] = useState(false)\n    let { address } = useParams()\n\n    useEffect(() => {\n        async function process() {\n            let res = await getPool(address);\n            setState({\n                address: address,\n                creator: res.creator,\n                currentValue: res.currentValue,\n                isPublic: res.isPublic\n            })\n            res.breakdown.map(item => item.percent = Number(item.percent))\n            res.breakdown.map(item => item.name = testTokenList.find(tok => web3.utils.toChecksumAddress(tok.key) === item.address).text)\n            setBreakdown(res.breakdown);\n        }\n\n        process();\n    }, [])\n\n    useEffect(() => {\n        if (window.ethereum !== undefined) {\n            setConnected(window.ethereum.selectedAddress)\n        } else {\n            setConnected(false)\n        }\n    }, [])\n\n    const handleDeposit = async () => {\n        if (!deposit || deposit === 0) {\n            alert(\"Add ETH value\")\n            return\n        } else {\n            let res = await depositEth(state.address, deposit)\n            return res\n        }\n    }\n\n    const handleWithdraw = async () => {\n        if (!withdraw || withdraw === 0) {\n            alert(\"Withdraw ETH\")\n            return\n        } else {\n            let res = await withdrawEth(state.address, withdraw)\n            return res\n        }\n    }\n\n    return (\n        <div className=\"manage-pool\">\n        <div className=\"pool-details\">\n                <h1 className=\"pool-details_h1\">Contract: {state.address}</h1>\n                <h3 className=\"pool-details_h3\">Public: {state.isPublic ? \"Yes\" : \"No\"}</h3>\n                <h4 className=\"pool-details_h4\">Creator: {state.creator}</h4>\n            <div className=\"pool-details-breakdown\">\n                <h2 className=\"pool-details-breakdown_h2\">Pool Assets</h2>\n                {breakdown.map((item, index) => (\n                <div className=\"pool-details-breakdown-item\" key={index}>\n                    <h3 className=\"pool-details-breakdown-item_h3\">Asset {index + 1}: {item.name}</h3>\n                    <h5 className=\"pool-details-breakdown-item_h5\"><b>Token Address:</b> {item.address}</h5>\n                    <h5 className=\"pool-details-breakdown-item_h5\"><b>Percent:</b> {item.percent}%</h5>\n                </div>                  \n                ))}\n            </div>\n            <div className=\"pool-details-value\">\n                <h3 className=\"pool-details-value_h3\"><b>Current Pool Value:</b> {state.currentValue} ETH</h3>\n            </div>\n            <div className=\"pool-actions\">\n                <div className=\"pool-actions-deposit\">\n                <h3 className=\"pool-actions-deposit_h3\">Deposit</h3>\n                    <TextField\n                        placeholder=\"Amount to Deposit (ETH)\"\n                        value={deposit}\n                        suffix=\"ETH\"\n                        styles={{root: {margin: '12px 0'}}}\n                        onChange={event => setDeposit(event.target.value)}\n                        />\n                    <DefaultButton\n                        className=\"pool-actions_button\"\n                        onClick={handleDeposit}\n                        disabled={!connected}>\n                        Deposit ETH\n                    </DefaultButton>\n                </div>\n                <div className=\"pool-actions-withdraw\">\n                    <h3 className=\"pool-actions-withdraw_h3\">Withdraw</h3>\n                    <TextField\n                        placeholder=\"% of Principal to Withdraw\"\n                        value={withdraw}\n                        suffix=\"%\"\n                        styles={{root: { margin: '12px 0'}}}\n                        onChange={event => setWithdraw(event.target.value)}\n                        />\n                    <DefaultButton\n                        className=\"pool-actions_button\"\n                        onClick={handleWithdraw}\n                        disabled={!connected}>\n                        Withdraw ETH\n                    </DefaultButton>\n                </div>\n            </div>\n        </div>\n            <div className=\"pool-graph\">\n            <PieChart width={400} height={400}>\n                <Pie\n                    data={breakdown}\n                    fill=\"#8884d8\"\n                    dataKey=\"percent\"\n                    innerRadius={60}\n                    nameKey=\"name\"\n                    >\n            {\n            breakdown.map((entry, index) => <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />)\n            }\n            </Pie>\n            <Tooltip formatter={(percent) => {return percent + \"%\"}} />\n            </PieChart>\n            </div>\n        </div>\n    )\n}\n\nexport default ManagePool","/Users/dperk6/qfinance/qfinance-client/src/services/depositEth.js",[],"/Users/dperk6/qfinance/qfinance-client/src/services/withdrawEth.js",[],"/Users/dperk6/qfinance/qfinance-client/src/components/PoolList/PoolList.js",["88"],"/Users/dperk6/qfinance/qfinance-client/src/views/Pools/Pools.js",[],{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":4,"column":10,"nodeType":"95","messageId":"96","endLine":4,"endColumn":19},{"ruleId":"97","severity":1,"message":"98","line":113,"column":13,"nodeType":"99","endLine":113,"endColumn":33},{"ruleId":"93","severity":1,"message":"94","line":7,"column":10,"nodeType":"95","messageId":"96","endLine":7,"endColumn":19},{"ruleId":"93","severity":1,"message":"100","line":11,"column":20,"nodeType":"95","messageId":"96","endLine":11,"endColumn":26},{"ruleId":"93","severity":1,"message":"101","line":11,"column":43,"nodeType":"95","messageId":"96","endLine":11,"endColumn":62},{"ruleId":"102","severity":1,"message":"103","line":43,"column":8,"nodeType":"104","endLine":43,"endColumn":10,"suggestions":"105"},{"ruleId":"106","severity":1,"message":"107","line":84,"column":110,"nodeType":"99","endLine":84,"endColumn":125},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],"no-unused-vars","'tokenList' is defined but never used.","Identifier","unusedVar","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Sector' is defined but never used.","'ResponsiveContainer' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'address'. Either include it or remove the dependency array.","ArrayExpression",["110"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","no-global-assign","no-unsafe-negation",{"desc":"111","fix":"112"},"Update the dependencies array to be: [address]",{"range":"113","text":"114"},[1598,1600],"[address]"]