import { graphql, Link, useStaticQuery } from "gatsby"
import { GatsbyImage } from "gatsby-plugin-image"
import React from "react"
import "./qtoken.css"

const QToken: React.FC = () => {
  const image: any = useStaticQuery(query)

  return (
    <div className="q-token" id="qfi">
      <div className="q-token-header">
        <h2>QFI Token</h2>
        <p>
          QFI is the protocol token for QFinance. You can use it to vote on protocol
          governance and earn it by staking deposit tokens, LP tokens, or QFI itself.
          The intention is to return ownership to the very people who use the platform,
          instead of speculators.
        </p>        
      </div>
      <div className="q-logo">
        <GatsbyImage image={image.file.childImageSharp.gatsbyImageData} alt="QFI logo" />
      </div>
      <div className="q-content">
        <h3 style={{textAlign: 'left', margin: '0'}}>
          Main value drivers at this time
        </h3>
        <ol>
          <li>
            All ETH fees generated by the protocol are used to buy back QFI and provide QFI-ETH liquidity. This
            liquidity is locked and burned, raising the base price of QFI and providing a healthy trading ecosystem.
          </li>
          <li>
            The token has value based on the perceived value of protocol governance votes. As the protocol grows,
            so too should the value of voting rights.
          </li>
          <li>
            General speculative value placed on the token by traders.
          </li>
        </ol>
        <Link to="/qfi" className="q-token-link">
          More about the QFI token
        </Link>
      </div>
    </div>
  )
}

export default QToken

const query = graphql`
  query {
    file(relativePath: { eq: "q.png" }) {
      childImageSharp {
        gatsbyImageData(width: 280)
      }
    }
  }
`
